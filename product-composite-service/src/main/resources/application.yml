springdoc:
  swagger-ui.path: /openapi/swagger-ui.html
  api-docs.path: /openapi/v3/api-docs
  packagesToScan:
    - com.smithjilks.microservices.composite.product
  pathsToMatch:
    - /**

api:
  common:
    version: 1.0.0
    title: Example API
    description: Description of Example API
    termsOfService: Example API Terms of Service
    license: Example API LICENSE
    licenseUrl: EXAMPLE API LICENSE URL

    externalDocDesc: EXAMPLE API WIKI PAGE
    externalDocUrl: EXAMPLE API EXTERNAL DOC URL
    contact:
      name: NAME OF CONTACT
      url: URL TO CONTACT
      email: contact@example.com

  responseCodes:
    ok.description: OK
    badRequest.description: Bad Request, invalid format of the request. See response message for more information.
    notFound.description: Not found, the specified id does not exist
    unprocessableEntity.description: Unprocessable Entity, input parameters caused the processing to fail. See response message for more information

  product-composite:
    get-composite-product:
      description: Resturns a composite view of the specified product id
      notes: |
        # Normal response
        If the requested product id is found the method will return information regarding:
        1. Base product information
        2. Reviews 
        3. Recommendations
        4. Service Addresses\n(technical information regarding the addresses of the microservices that create the response)
        
        # Expected partial and error responses
        In the following cases, only a partial response be created (used to simplify testing of error conditions)

server.port: 7000
server.error.include-message: always

app:
  product-service:
    host: localhost
    port: 7001
  recommendation-service:
    host: localhost
    port: 7002
  review-service:
    host: localhost
    port: 7003

logging:
  level:
    root: INFO
    com.smithjilks.microservices: DEBUG


---
spring.config.activate.on-profile: docker

server.port: 8080

app:
  product-service:
    host: product
    port: 8080
  recommendation-service:
    host: recommendation
    port: 8080
  review-service:
    host: review
    port: 8080
